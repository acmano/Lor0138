<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Query" xml:space="preserve">
    <value>SELECT  tabela.CodigoEmpresa
     ,  tabela.CodigoItem
     ,  tabela.CodigoUnidadeMedida
     ,  tabela.DescricaoUnidadeMedida
     ,  tabela.FatorConversao
     ,  tabela.PesoUnitario
     ,  tabela.PesoEmbalagemVazia
     ,  tabela.PesoEmbalagem
     ,  tabela.DataCadastro
     ,  tabela.ControlaEstoque
     ,  tabela.CodigoLocalEstoque
     ,  tabela.DescricaoLocalEstoque
     ,  tabela.TipoApontamento
     ,  tabela.ControlaInspecao
     ,  tabela.CodigoLocalInspecao
     ,  tabela.DescricaoLocalInspecao
     ,  tabela.CodigoTipoItem
     ,  tabela.DescricaoTipoItem
     ,  tabela.CodigoFamilia
     ,  tabela.DescricaoFamilia
     ,  tabela.CodigoSituacao0022
     ,  tabela.DescricaoSituacao0022
     ,  tabela.CodigoGrupoControleEstoque
     ,  tabela.DescricaoGrupoControleEstoque
     ,  tabela.CodigoSituacao0770
     ,  tabela.DescricaoSituacao0770
     ,  tabela.CodigoLinhaProduto
     ,  tabela.DescricaoLinhaProduto
     ,  tabela.CodigoComponenteCusto
     ,  tabela.DescricaoComponenteCusto
     ,  tabela.CodigoLinhaReceita
     ,  tabela.DescricaoLinhaReceita
     ,  tabela.Iqpf
     ,  tabela.CodigoSegmentoMercado
     ,  tabela.DescricaoSegmentoMercado
     ,  tabela.ControlaLote
     ,  tabela.CodigoClasseUso
     ,  tabela.DescricaoClasseUso
     ,  tabela.ProduzidoEmpresa
     ,  tabela.DescricaoEan13
     ,  tabela.Especificacoes
     ,  tabela.Comprimento
     ,  tabela.Largura
     ,  tabela.Altura
     ,  tabela.Volume
     ,  tabela.PecasItem
     ,  tabela.ItensCaixa
     ,  tabela.CaixasEmbalagem
     ,  tabela.EmbalagensCamada
     ,  tabela.CamadasPalete
     ,  tabela.EmbalagensPalete
  FROM openquery
  (
    {0}
  , ' SELECT  item.cod_empresa AS CodigoEmpresa
			     ,  item.cod_item AS CodigoItem
			
			-- Linha 1
			     ,  NVL ( unid_med.cod_unid_med, " " ) AS CodigoUnidadeMedida
			     ,  NVL ( unid_med.den_unid_med_30, " " ) AS DescricaoUnidadeMedida
			     ,  item.fat_conver AS FatorConversao
			
			-- Linha 2
			     ,  item.pes_unit AS PesoUnitario
			     ,  NVL ( lor_item.pes_embal, 0 ) AS PesoEmbalagemVazia
			     ,  NVL ( ( lor_item.pes_embal + ( lor_item.qtd_cai_emb * item.pes_unit ) ), 0 ) AS PesoEmbalagem
			     ,  item.dat_cadastro::CHAR(10) AS DataCadastro
			
			-- Linha 3
			     ,  item.ies_ctr_estoque = "S" AS ControlaEstoque
			     ,  NVL ( local_estoque.cod_local, " " ) AS CodigoLocalEstoque
			     ,  NVL ( local_estoque.den_local, " " ) AS DescricaoLocalEstoque
			     ,  NVL ( lor_item.ies_tip_apont, " " ) AS TipoApontamento
			
			-- Linha 4
			     ,  item.ies_tem_inspecao = "S" AS ControlaInspecao
			     ,  NVL ( local_inspecao.cod_local, " " ) AS CodigoLocalInspecao
			     ,  NVL ( local_inspecao.den_local, " " ) AS DescricaoLocalInspecao
			     ,  item.ies_tip_item AS CodigoTipoItem
			     ,  p_den_tip_item ( item.ies_tip_item ) AS DescricaoTipoItem
			
			-- Linha 5
			      ,  NVL ( familia.cod_familia, " " ) AS CodigoFamilia
			      ,  NVL ( familia.den_familia, " " ) AS DescricaoFamilia
			      ,  item.ies_situacao AS CodigoSituacao0022
			      ,  p_den_situacao ( item.ies_situacao ) AS DescricaoSituacao0022
			
			-- Linha 6
			      ,  NVL ( grupo_ctr_estoq.gru_ctr_estoq, " " ) AS CodigoGrupoControleEstoque
			      ,  NVL ( grupo_ctr_estoq.den_gru_ctr_estoq, " " ) AS DescricaoGrupoControleEstoque
			      ,  NVL ( lor_item_sit.cod_situacao, " " ) AS CodigoSituacao0770
			      ,  NVL ( lor_item_sit.den_situacao, " " ) AS DescricaoSituacao0770
			
			-- Linha 7
			      ,  item.cod_lin_prod AS CodigoLinhaProduto
			      ,  p_den_linha_prod ( item.cod_lin_prod, 0, 0, 0 ) AS DescricaoLinhaProduto
			      ,  NVL ( comp_custo.cod_comp_custo, " " ) AS CodigoComponenteCusto
			      ,  NVL ( comp_custo.den_comp_custo, " " ) AS DescricaoComponenteCusto
			
			-- Linha 8
			      ,  item.cod_lin_recei AS CodigoLinhaReceita
			      ,  p_den_linha_prod ( item.cod_lin_prod, item.cod_lin_recei, 0, 0 ) AS DescricaoLinhaReceita
			      ,  NVL ( item_sup.ies_item_iso_9000, "N" ) = "S" AS Iqpf
			
			-- Linha 9
			      ,  item.cod_seg_merc AS CodigoSegmentoMercado
			      ,  p_den_linha_prod ( item.cod_lin_prod, item.cod_lin_recei, item.cod_seg_merc, 0 ) AS DescricaoSegmentoMercado
			      ,  item.ies_ctr_lote = "S" AS ControlaLote
			
			-- Linha 10
			      ,  item.cod_cla_uso AS CodigoClasseUso
			      ,  p_den_linha_prod ( item.cod_lin_prod, item.cod_lin_recei, item.cod_seg_merc, item.cod_cla_uso ) AS DescricaoClasseUso
			      ,  NVL ( lor_item.ies_prod_emp, "N" ) = "S" AS ProduzidoEmpresa
			
			-- Linha 11
			      ,  NVL ( lor_item_compl.den_item, " " ) AS DescricaoEan13
			
			-- Linha 12
			      ,  NVL ( item_esp.des_esp_item, " " ) AS Especificacoes
			
			-- Linha 13
			      ,  NVL ( lor_item.emb_comprim, 0 ) AS Comprimento
			      ,  NVL ( lor_item.emb_largura, 0 ) AS Largura
			      ,  NVL ( lor_item.emb_altura, 0 ) AS Altura
			      ,  NVL ( ( lor_item.emb_comprim * lor_item.emb_largura * lor_item.emb_altura ), 0 ) AS Volume
			      ,  NVL ( lor_item.qtd_pcs_ite, 0 ) AS PecasItem
			      ,  NVL ( lor_item.qtd_ite_cai, 0 ) AS ItensCaixa
			      ,  NVL ( lor_item.qtd_cai_emb, 0 ) AS CaixasEmbalagem
			      ,  NVL ( lor_item.qtd_emb_cam, 0 ) AS EmbalagensCamada
			      ,  NVL ( lor_item.qtd_cam_pal, 0 ) AS CamadasPalete
			      ,  NVL ( ( lor_item.qtd_ite_cai * lor_item.qtd_cai_emb * lor_item.qtd_emb_cam * lor_item.qtd_cam_pal ), 0 ) AS EmbalagensPalete
			  FROM  item
			  LEFT  OUTER JOIN familia
			    ON  familia.cod_empresa = item.cod_empresa
			    AND familia.cod_familia = item.cod_familia
			  LEFT  OUTER JOIN unid_med
			    ON  unid_med.cod_unid_med = item.cod_unid_med
			  LEFT  OUTER JOIN item_sup
			    ON  item_sup.cod_empresa = item.cod_empresa
			    AND item_sup.cod_item = item.cod_item
			  LEFT  OUTER JOIN lor_item
			    ON  lor_item.cod_empresa = item.cod_empresa
			    AND lor_item.cod_item = item.cod_item
			  LEFT  OUTER JOIN LOCAL local_estoque
			    ON  local_estoque.cod_empresa = item.cod_empresa
			    AND local_estoque.cod_local = item.cod_local_estoq
			  LEFT  OUTER JOIN LOCAL local_inspecao
			    ON  local_inspecao.cod_empresa = item.cod_empresa
			    AND local_inspecao.cod_local = item.cod_local_insp
			  LEFT  OUTER JOIN grupo_ctr_estoq
			    ON  grupo_ctr_estoq.cod_empresa = item.cod_empresa
			    AND grupo_ctr_estoq.gru_ctr_estoq = item.gru_ctr_estoq
			  LEFT  OUTER JOIN lor_item_sit
			    ON  lor_item_sit.cod_situacao = lor_item.ies_situa
			  LEFT  OUTER JOIN item_custo
			    ON  item_custo.cod_empresa = item.cod_empresa
			    AND   item_custo.cod_item = item.cod_item
			  LEFT  OUTER JOIN comp_custo
			    ON  comp_custo.cod_empresa = item_custo.cod_empresa
			    AND comp_custo.cod_comp_custo = item_custo.cod_comp_custo
			  LEFT  OUTER JOIN lor_item_compl
			    ON  lor_item_compl.cod_empresa = item.cod_empresa
			    AND lor_item_compl.cod_item = item.cod_item
			  LEFT  OUTER JOIN item_esp
			    ON  item_esp.cod_empresa = item.cod_empresa
			    AND item_esp.cod_item = item.cod_item
			  WHERE item.cod_empresa = UPPER ( TRIM ( "{1}" ) )
			  AND   item.cod_item = UPPER ( TRIM ( "{2}" ) )
  '
  ) AS tabela</value>
  </data>
</root>